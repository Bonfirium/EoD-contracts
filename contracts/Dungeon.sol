pragma solidity ^0.4.23;


contract Dungeon {

	uint8 constant WIDTH = 30;
	uint8 constant HEIGHT = 16;
	// EMPTY should always be equals to 0
	uint8 constant EMPTY = 0;
	uint8 constant POTENTIAL_ROOM = 1;
	uint8 constant ROOM = 2;
	uint8 constant WALL = 3;

	int8[8] D8_X;
	int8[8] D8_Y;
	int8[12] D12_X;
	int8[12] D12_Y;

	uint8[480] map;
	uint256 seed;
	uint256 _generator;
	uint8 _randomIterator;

	constructor(uint256 __seed) public {
		D8_X = [int8(1), 1, 0, -1, -1, -1, 0, 1];
		D8_Y = [int8(0), -1, -1, -1, 0, 1, 1, 1];
		D12_X = [int8(2), 2, 1, 0, -1, -2, -2, -2, -1, 0, 1, 2];
		D12_Y = [int8(0), -1, -2, -2, -2, -1, 0, 1, 2, 2, 2, 1];
		seed = __seed;
		_generator = seed;
		map = [
			3, 3, 3, 3, 3, 5, 3, 3, 3, 3, 4, 3, 3, 2, 3, 2,
			4, 3, 3, 5, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3,
			3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 3, 5, 3, 2, 3,
			3, 2, 3, 2, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3,
			3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 5, 3, 2,
			3, 3, 2, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3,
			2, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 2,
			3, 3, 2, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 3,
			2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 3, 2, 3,
			3, 3, 5, 3, 2, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 3,
			3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
			4, 3, 3, 2, 3, 3, 3, 2, 3, 3, 2, 3, 3, 4, 3, 2,
			3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
			3, 2, 3, 3, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 2,
			3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
			2, 3, 3, 3, 3, 3, 3, 2, 3, 3, 2, 3, 2, 3, 2, 3,
			3, 3, 2, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
			3, 3, 3, 3, 3, 3, 3, 5, 3, 3, 3, 2, 3, 3, 3, 2,
			3, 2, 3, 3, 3, 5, 3, 3, 3, 2, 3, 3, 3, 2, 3, 3,
			3, 3, 3, 2, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 2,
			2, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 5, 3, 3, 3,
			3, 3, 2, 3, 3, 3, 3, 3, 2, 3, 2, 3, 3, 3, 3, 2,
			2, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 2, 3, 3,
			3, 3, 2, 3, 2, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3,
			2, 3, 3, 3, 3, 3, 2, 3, 3, 3, 2, 3, 2, 3, 5, 3,
			3, 3, 5, 3, 2, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3,
			2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 4,
			3, 3, 3, 3, 3, 2, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3,
			3, 3, 3, 2, 3, 3, 3, 2, 3, 3, 3, 2, 3, 3, 3, 3,
			3, 4, 3, 3, 3, 2, 3, 3, 3, 2, 3, 3, 3, 2, 3, 4
		];
	}

	function get_map() public view returns (uint8[480]) {
		return map;
	}

}
